// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package database

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
)

type GoDbUser2faType string

const (
	GoDbUser2faTypeSMS   GoDbUser2faType = "SMS"
	GoDbUser2faTypeEMAIL GoDbUser2faType = "EMAIL"
	GoDbUser2faTypeAPP   GoDbUser2faType = "APP"
)

func (e *GoDbUser2faType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = GoDbUser2faType(s)
	case string:
		*e = GoDbUser2faType(s)
	default:
		return fmt.Errorf("unsupported scan type for GoDbUser2faType: %T", src)
	}
	return nil
}

type NullGoDbUser2faType struct {
	GoDbUser2faType GoDbUser2faType
	Valid           bool // Valid is true if GoDbUser2faType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullGoDbUser2faType) Scan(value interface{}) error {
	if value == nil {
		ns.GoDbUser2faType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.GoDbUser2faType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullGoDbUser2faType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.GoDbUser2faType), nil
}

// user
type GoDbUser struct {
	ID            uint32
	Firstname     string
	Lastname      string
	Username      string
	Email         string
	PasswordHash  string
	Disabled      sql.NullBool
	Status        string
	LastLoginDate sql.NullTime
	CreateDate    sql.NullTime
	EditDate      sql.NullTime
	PasswordSalt  string
	Is2faEnabled  sql.NullBool
}

// user_2fa
type GoDbUser2fa struct {
	ID         uint32
	UserID     uint32
	Type       GoDbUser2faType
	Secret     string
	Phone      sql.NullString
	Email      sql.NullString
	IsActive   bool
	CreateDate sql.NullTime
	EditDate   sql.NullTime
}
