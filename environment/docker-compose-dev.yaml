version: "3.2"

networks:
  pre-go-local-network:
    driver: bridge

services:
  # go.ecommerce.com:
  #   environment:
  #       - APP_ENV=prod
  #   container_name: go_ecommerce
  #   build:
  #     context: .
  #     dockerfile: ../Dockerfile
  #   restart: always
  #   depends_on: 
  #     - mysql
  #     - redis
  #   ports:
  #     - "8002:8082"

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root1234
      MYSQL_DATABASE: db
      MYSQL_PASSWORD: root1234
    ports:
      - "3306:3306"
    volumes:
      - ./data/mysql_data:/var/lib/mysql
      - ./init:/docker-entrypoint-initdb.d
    networks:
      - pre-go-local-network

  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"
    volumes: 
      - ./data/redis_data:/data

  prometheus:
    image: prom/prometheus:latest
    container_name: pre-event-prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - "9092:9090"
    networks:
      - pre-go-local-network

  grafana:
    image: grafana/grafana
    container_name: pre-event-grafana
    hostname: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=localhost
      #enable logger
      - GF_LOG_MODE=console file
      - GF_LOG_FILTERS=alerting.notifier.slack:debug alertmanager:debug ngalert:debug
    volumes:
      - ./grafana-storage:/var/lib/grafana
    ports:
      - "3002:3000"
    networks:
      - pre-go-local-network

volumes:
  mysql_data:
  redis_data: 